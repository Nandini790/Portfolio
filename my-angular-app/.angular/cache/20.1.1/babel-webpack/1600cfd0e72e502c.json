{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport emailjs from '@emailjs/browser';\nlet Home = class Home {\n  sendEmail() {\n    emailjs.sendForm('YOUR_SERVICE_ID',\n    // Replace with your actual service ID\n    'YOUR_TEMPLATE_ID',\n    // Replace with your EmailJS template ID\n    this.contactForm.nativeElement, 'YOUR_PUBLIC_USER_ID' // Your public user ID from EmailJS\n    ).then(() => {\n      alert('Message sent successfully!');\n      this.contactForm.nativeElement.reset();\n    }).catch(error => {\n      console.error('Email send failed:', error);\n    });\n  }\n};\n__decorate([ViewChild('contactForm'), __metadata(\"design:type\", ElementRef)], Home.prototype, \"contactForm\", void 0);\nHome = __decorate([Component({\n  selector: 'app-home',\n  imports: [CommonModule, FormsModule],\n  templateUrl: './home.html',\n  styleUrl: './home.css',\n  standalone: true\n})], Home);\nexport { Home };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}